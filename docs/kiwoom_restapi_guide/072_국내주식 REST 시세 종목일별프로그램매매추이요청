파일이름 : 072_국내주식 REST 시세 종목일별프로그램매매추이요청.md

# 국내주식  
## REST 시세

### 기본 정보

| 항목                | 내용                                   |
|---------------------|----------------------------------------|
| **Method**          | POST                                  |
| **운영 도메인**     | https://api.kiwoom.com                |
| **모의투자 도메인** | https://mockapi.kiwoom.com (KRX만 지원가능) |
| **URL**             | /api/dostk/mrkcond                    |
| **Format**          | JSON                                  |
| **Content-Type**    | application/json;charset=UTF-8        |

[다른 TR 확인하기](#)

---

### TR명

| TR명                                 | 코드      |
|---------------------------------------|-----------|
| 종목일별프로그램매매추이요청          | ka90013   |
| 주식호가요청                         | ka10004   |
| 주식일주월시분요청                   | ka10005   |
| 주식시분요청                         | ka10006   |
| 시세표성정보요청                     | ka10007   |
| 신주인수권전체시세요청                | ka10011   |
| 일별기관매매종목요청                 | ka10044   |
| 종목별기관매매추이요청                | ka10045   |
| 체결강도추이시간별요청               | ka10046   |
| 체결강도추이일별요청                 | ka10047   |
| 장중투자자별매매요청                 | ka10063   |
| 장마감후투자자별매매요청              | ka10066   |
| 증권사별종목매매동향요청              | ka10078   |
| 일별주가요청                         | ka10086   |
| 시간외단일가요청                     | ka10087   |
| 프로그램매매추이요청 시간대별         | ka90005   |
| 프로그램매매차익잔고추이요청          | ka90006   |
| 프로그램매매누적추이요청              | ka90007   |
| 종목시간별프로그램매매추이요청        | ka90008   |
| 프로그램매매추이요청 일자별           | ka90010   |
| 종목일별프로그램매매추이요청          | ka90013   |

---

### 요청

#### Header

| Element          | 한글명      | type    | Required | Length | Description                                   |
|------------------|------------|---------|----------|--------|-----------------------------------------------|
| authorization    | 접근토큰    | String  | Y        | 1000   | 토큰 지정시 토큰타입("Bearer") 붙혀서 호출예) Bearer Egicyx... |
| cont-yn          | 연속조회여부| String  | N        | 1      | 응답 Header의 연속조회여부값이 Y일 경우 다음데이터 요청시 응답 Header의 cont-yn값 세팅 |
| next-key         | 연속조회키  | String  | N        | 50     | 응답 Header의 연속조회여부값이 Y일 경우 다음데이터 요청시 응답 Header의 next-key값 세팅 |
| api-id           | TR명        | String  | Y        | 10     |                                               |

#### Body

| Element     | 한글명         | type    | Required | Length | Description                                   |
|-------------|---------------|---------|----------|--------|-----------------------------------------------|
| amt_qty_tp  | 금액수량구분   | String  | N        | 1      | 1:금액, 2:수량                                |
| stk_cd      | 종목코드       | String  | Y        | 20     | 거래소별 종목코드(KRX:039490, NXT:039490_NX, SOR:039490_AL) |
| date        | 날짜           | String  | N        | 8      | YYYYMMDD                                     |

---

### 응답

#### Header

| Element   | 한글명      | type    | Required | Length | Description                                   |
|-----------|------------|---------|----------|--------|-----------------------------------------------|
| cont-yn   | 연속조회여부| String  | N        | 1      | 다음 데이터가 있을시 Y값 전달                 |
| next-key  | 연속조회키  | String  | N        | 50     | 다음 데이터가 있을시 다음 키값 전달           |
| api-id    | TR명        | String  | Y        | 10     |                                               |

#### Body

| Element                      | 한글명                | type   | Required | Length | Description      |
|------------------------------|-----------------------|--------|----------|--------|------------------|
| stk_daly_prm_trde_trnsn      | 종목일별프로그램매매추이 | LIST   | N        |        |                  |
| - dt             | 일자                  | String | N        | 20     |                  |
| - cur_prc        | 현재가                | String | N        | 20     |                  |
| - pre_sig        | 대비기호              | String | N        | 20     |                  |
| - pred_pre       | 전일대비              | String | N        | 20     |                  |
| - flu_rt         | 등락율                | String | N        | 20     |                  |
| - trde_qty       | 거래량                | String | N        | 20     |                  |
| - prm_sell_amt   | 프로그램매도금액       | String | N        | 20     |                  |
| - prm_buy_amt    | 프로그램매수금액       | String | N        | 20     |                  |
| - prm_netprps_amt | 프로그램순매수금액     | String | N        | 20     |                  |
| - prm_netprps_amt_irds | 프로그램순매수금액증감 | String | N        | 20     |                  |
| - prm_sell_qty   | 프로그램매도수량       | String | N        | 20     |                  |
| - prm_buy_qty    | 프로그램매수수량       | String | N        | 20     |                  |
| - prm_netprps_qty | 프로그램순매수수량     | String | N        | 20     |                  |
| - prm_netprps_qty_irds | 프로그램순매수수량증감 | String | N        | 20     |                  |
| - base_pric_tm   | 기준가시간            | String | N        | 20     |                  |
| - dbrt_trde_rpy_sum | 대차거래상환주수합    | String | N        | 20     |                  |
| - remn_rcvord_sum | 잔고수주합            | String | N        | 20     |                  |
| - stex_tp        | 거래소구분            | String | N        | 20     | KRX, NXT, 통합   |



## PYTHON
import requests
import json

# 종목일별프로그램매매추이요청
def fn_ka90013(token, data, cont_yn='N', next_key=''):
	# 1. 요청할 API URL
	#host = 'https://mockapi.kiwoom.com' # 모의투자
	host = 'https://api.kiwoom.com' # 실전투자
	endpoint = '/api/dostk/mrkcond'
	url =  host + endpoint

	# 2. header 데이터
	headers = {
		'Content-Type': 'application/json;charset=UTF-8', # 컨텐츠타입
		'authorization': f'Bearer {token}', # 접근토큰
		'cont-yn': cont_yn, # 연속조회여부
		'next-key': next_key, # 연속조회키
		'api-id': 'ka90013', # TR명
	}

	# 3. http POST 요청
	response = requests.post(url, headers=headers, json=data)

	# 4. 응답 상태 코드와 데이터 출력
	print('Code:', response.status_code)
	print('Header:', json.dumps({key: response.headers.get(key) for key in ['next-key', 'cont-yn', 'api-id']}, indent=4, ensure_ascii=False))
	print('Body:', json.dumps(response.json(), indent=4, ensure_ascii=False))  # JSON 응답을 파싱하여 출력

# 실행 구간
if __name__ == '__main__':
	# 1. 토큰 설정
	MY_ACCESS_TOKEN = '사용자 AccessToken' # 접근토큰

	# 2. 요청 데이터
	params = {
		'amt_qty_tp': '', # 금액수량구분 1:금액, 2:수량
		'stk_cd': '005930', # 종목코드 거래소별 종목코드 (KRX:039490,NXT:039490_NX,SOR:039490_AL)
		'date': '', # 날짜 YYYYMMDD
	}

	# 3. API 실행
	fn_ka90013(token=MY_ACCESS_TOKEN, data=params)

	# next-key, cont-yn 값이 있을 경우
	# fn_ka90013(token=MY_ACCESS_TOKEN, data=params, cont_yn='Y', next_key='nextkey..')


    ## Example


Request
{
	"amt_qty_tp" : "",
	"stk_cd" : "005930",
	"date" : ""
}
Response
{
	"stk_daly_prm_trde_trnsn":
		[
			{
				"dt":"20241125",
				"cur_prc":"+267000",
				"pre_sig":"2",
				"pred_pre":"+60000",
				"flu_rt":"+28.99",
				"trde_qty":"3",
				"prm_sell_amt":"0",
				"prm_buy_amt":"0",
				"prm_netprps_amt":"0",
				"prm_netprps_amt_irds":"0",
				"prm_sell_qty":"0",
				"prm_buy_qty":"0",
				"prm_netprps_qty":"0",
				"prm_netprps_qty_irds":"0",
				"base_pric_tm":"",
				"dbrt_trde_rpy_sum":"",
				"remn_rcvord_sum":"",
				"stex_tp":"통합"
			},
			{
				"dt":"20241122",
				"cur_prc":"0",
				"pre_sig":"0",
				"pred_pre":"0",
				"flu_rt":"0.00",
				"trde_qty":"0",
				"prm_sell_amt":"0",
				"prm_buy_amt":"0",
				"prm_netprps_amt":"0",
				"prm_netprps_amt_irds":"--6",
				"prm_sell_qty":"0",
				"prm_buy_qty":"0",
				"prm_netprps_qty":"0",
				"prm_netprps_qty_irds":"--19",
				"base_pric_tm":"",
				"dbrt_trde_rpy_sum":"",
				"remn_rcvord_sum":"",
				"stex_tp":"KRX"
			}
		],
	"return_code":0,
	"return_msg":"정상적으로 처리되었습니다"
}
