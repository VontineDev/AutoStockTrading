파일이름 : 153_국내주식 REST 테마 테마구성종목요청.md

# 국내주식  
## REST  
### 테마

---

## 기본 정보  
**Method**  
POST  

**운영 도메인**  
https://api.kiwoom.com  

**모의투자 도메인**  
https://mockapi.kiwoom.com (KRX만 지원가능)  

**URL**  
/api/dostk/thme  

**Format**  
JSON  

**Content-Type**  
application/json;charset=UTF-8  

[다른 TR 확인하기](#)

---

## TR명

| TR명                   | 코드     |
|------------------------|----------|
| 테마구성종목요청       | ka90002  |
| 테마그룹별요청         | ka90001  |
| 테마구성종목요청       | ka90002  |

---

## 요청

### Header

| Element           | 한글명         | type    | Required | Length | Description                                 |
|-------------------|---------------|---------|----------|--------|---------------------------------------------|
| authorization     | 접근토큰       | String  | Y        | 1000   | 토큰 지정시 토큰타입("Bearer") 붙혀서 호출예) Bearer Egicyx... |
| cont-yn           | 연속조회여부   | String  | N        | 1      | 응답 Header의 연속조회여부값이 Y일 경우 다음데이터 요청시 응답 Header의 cont-yn값 세팅 |
| next-key          | 연속조회키     | String  | N        | 50     | 응답 Header의 연속조회여부값이 Y일 경우 다음데이터 요청시 응답 Header의 next-key값 세팅 |
| api-id            | TR명          | String  | Y        | 10     |                                             |

---

### Body

| Element         | 한글명         | type    | Required | Length | Description               |
|-----------------|---------------|---------|----------|--------|---------------------------|
| date_tp         | 날짜구분       | String  | N        | 1      | 1일 ~ 99일 날짜입력       |
| thema_grp_cd    | 테마그룹코드   | String  | Y        | 6      | 테마그룹코드 번호         |
| stex_tp         | 거래소구분     | String  | Y        | 1      | 1:KRX, 2:NXT 3.통합       |

---

## 응답

### Header

| Element     | 한글명         | type    | Required | Length | Description                          |
|-------------|---------------|---------|----------|--------|--------------------------------------|
| cont-yn     | 연속조회여부   | String  | N        | 1      | 다음 데이터가 있을시 Y값 전달        |
| next-key    | 연속조회키     | String  | N        | 50     | 다음 데이터가 있을시 다음 키값 전달  |
| api-id      | TR명          | String  | Y        | 10     |                                      |

---

### Body

| Element                  | 한글명         | type    | Required | Length | Description           |
|--------------------------|---------------|---------|----------|--------|-----------------------|
| flu_rt                   | 등락률         | String  | N        | 20     |                       |
| dt_prft_rt               | 기간수익률     | String  | N        | 20     |                       |
| thema_comp_stk           | 테마구성종목   | LIST    | N        |        |                       |
| - stk_cd                 | 종목코드       | String  | N        | 20     |                       |
| - stk_nm                 | 종목명         | String  | N        | 20     |                       |
| - cur_prc                | 현재가         | String  | N        | 20     |                       |
| - flu_sig                | 등락기호       | String  | N        | 20     |                       |
| - pred_pre               | 전일대비       | String  | N        | 20     |                       |
| - flu_rt                 | 등락율         | String  | N        | 20     |                       |
| - acc_trde_qty           | 누적거래량     | String  | N        | 20     |                       |
| - sel_bid                | 매도호가       | String  | N        | 20     |                       |
| - sel_req                | 매도잔량       | String  | N        | 20     |                       |
| - buy_bid                | 매수호가       | String  | N        | 20     |                       |
| - buy_req                | 매수잔량       | String  | N        | 20     |                       |
| - dt_prft_rt_n           | 기간수익률n    | String  | N        | 20     |                       |



## PYTHON
import requests
import json

# 테마구성종목요청
def fn_ka90002(token, data, cont_yn='N', next_key=''):
	# 1. 요청할 API URL
	#host = 'https://mockapi.kiwoom.com' # 모의투자
	host = 'https://api.kiwoom.com' # 실전투자
	endpoint = '/api/dostk/thme'
	url =  host + endpoint

	# 2. header 데이터
	headers = {
		'Content-Type': 'application/json;charset=UTF-8', # 컨텐츠타입
		'authorization': f'Bearer {token}', # 접근토큰
		'cont-yn': cont_yn, # 연속조회여부
		'next-key': next_key, # 연속조회키
		'api-id': 'ka90002', # TR명
	}

	# 3. http POST 요청
	response = requests.post(url, headers=headers, json=data)

	# 4. 응답 상태 코드와 데이터 출력
	print('Code:', response.status_code)
	print('Header:', json.dumps({key: response.headers.get(key) for key in ['next-key', 'cont-yn', 'api-id']}, indent=4, ensure_ascii=False))
	print('Body:', json.dumps(response.json(), indent=4, ensure_ascii=False))  # JSON 응답을 파싱하여 출력

# 실행 구간
if __name__ == '__main__':
	# 1. 토큰 설정
	MY_ACCESS_TOKEN = '사용자 AccessToken' # 접근토큰

	# 2. 요청 데이터
	params = {
		'date_tp': '2', # 날짜구분 1일 ~ 99일 날짜입력
		'thema_grp_cd': '100', # 테마그룹코드 테마그룹코드 번호
		'stex_tp': '1', # 거래소구분 1:KRX, 2:NXT 3.통합
	}

	# 3. API 실행
	fn_ka90002(token=MY_ACCESS_TOKEN, data=params)

	# next-key, cont-yn 값이 있을 경우
	# fn_ka90002(token=MY_ACCESS_TOKEN, data=params, cont_yn='Y', next_key='nextkey..')


    ## Example


Request
{
	"date_tp" : "2",
	"thema_grp_cd" : "100",
	"stex_tp" : "1"
}
Response
{
	"flu_rt":"0.00",
	"dt_prft_rt":"0.00",
	"thema_comp_stk":
		[
			{
				"stk_cd":"005930",
				"stk_nm":"삼성전자",
				"cur_prc":"57800",
				"flu_sig":"3",
				"pred_pre":"0",
				"flu_rt":"0.00",
				"acc_trde_qty":"0",
				"sel_bid":"0",
				"sel_req":"0",
				"buy_bid":"0",
				"buy_req":"0",
				"dt_prft_rt_n":"0.00"
			},
			{
				"stk_cd":"005930",
				"stk_nm":"삼성전자",
				"cur_prc":"36700",
				"flu_sig":"3",
				"pred_pre":"0",
				"flu_rt":"0.00",
				"acc_trde_qty":"0",
				"sel_bid":"0",
				"sel_req":"0",
				"buy_bid":"0",
				"buy_req":"0",
				"dt_prft_rt_n":"0.00"
			},
			{
				"stk_cd":"005930",
				"stk_nm":"삼성전자",
				"cur_prc":"17380",
				"flu_sig":"3",
				"pred_pre":"0",
				"flu_rt":"0.00",
				"acc_trde_qty":"0",
				"sel_bid":"0",
				"sel_req":"0",
				"buy_bid":"0",
				"buy_req":"0",
				"dt_prft_rt_n":"0.00"
			},
			{
				"stk_cd":"005930",
				"stk_nm":"삼성전자",
				"cur_prc":"1410",
				"flu_sig":"3",
				"pred_pre":"0",
				"flu_rt":"0.00",
				"acc_trde_qty":"0",
				"sel_bid":"0",
				"sel_req":"0",
				"buy_bid":"1410",
				"buy_req":"1000",
				"dt_prft_rt_n":"0.00"
			}
		]
	,
	"return_code":0,
	"return_msg":"정상적으로 처리되었습니다"
}

