파일이름 : 167_국내주식 REST ETF 일별추이요청.md
# 국내주식 REST API (ETF)

## 기본 정보

- **Method:** POST  
- **운영 도메인:** https://api.kiwoom.com  
- **모의투자 도메인:** https://mockapi.kiwoom.com (KRX만 지원 가능)  
- **URL:** /api/dostk/etf  
- **Format:** JSON  
- **Content-Type:** application/json;charset=UTF-8  
- **다른 TR 확인하기:** [참조]

## TR명

| TR명                   | 내부코드   |
|-----------------------|-----------|
| ETF일별추이요청        | ka40003   |
| ETF수익율요청          | ka40001   |
| ETF종목정보요청        | ka40002   |
| ETF일별추이요청        | ka40003   |
| ETF전체시세요청        | ka40004   |
| ETF시간대별추이요청    | ka40006   |
| ETF시간대별체결요청    | ka40007   |
| ETF일자별체결요청      | ka40008   |
| ETF시간대별체결요청    | ka40009   |
| ETF시간대별추이요청    | ka40010   |

---

## 요청

### Header

| Element         | 한글명         | type   | Required | Length | Description                                             |
|----------------|---------------|--------|----------|--------|---------------------------------------------------------|
| authorization  | 접근토큰       | String | Y        | 1000   | 토큰 지정시 토큰타입("Bearer") 붙혀서 호출 (예: Bearer Egicyx...) |
| cont-yn        | 연속조회여부   | String | N        | 1      | 응답 Header의 연속조회여부값이 Y일 경우 다음데이터 요청시 응답 Header의 cont-yn값 세팅 |
| next-key       | 연속조회키     | String | N        | 50     | 응답 Header의 연속조회여부값이 Y일 경우 다음데이터 요청시 응답 Header의 next-key값 세팅 |
| api-id         | TR명          | String | Y        | 10     |                                                          |

### Body

| Element   | 한글명   | type   | Required | Length | Description |
|-----------|---------|--------|----------|--------|-------------|
| stk_cd    | 종목코드 | String | Y        | 6      |             |

---

## 응답

### Header

| Element   | 한글명         | type   | Required | Length | Description                                    |
|-----------|---------------|--------|----------|--------|------------------------------------------------|
| cont-yn   | 연속조회여부   | String | N        | 1      | 다음 데이터가 있을시 Y값 전달                  |
| next-key  | 연속조회키     | String | N        | 50     | 다음 데이터가 있을시 다음 키값 전달            |
| api-id    | TR명          | String | Y        | 10     |                                                |

### Body

| Element                | 한글명          | type   | Required | Length | Description |
|------------------------|----------------|--------|----------|--------|-------------|
| etfdaly_trnsn          | ETF일별추이    | LIST   | N        |        |             |
| - cntr_dt              | 체결일자        | String | N        | 20     |             |
| - cur_prc              | 현재가          | String | N        | 20     |             |
| - pre_sig              | 대비기호        | String | N        | 20     |             |
| - pred_pre             | 전일대비        | String | N        | 20     |             |
| - pre_rt               | 대비율          | String | N        | 20     |             |
| - trde_qty             | 거래량          | String | N        | 20     |             |
| - nav                  | NAV             | String | N        | 20     |             |
| - acc_trde_prica       | 누적거래대금    | String | N        | 20     |             |
| - navidex_dispty_rt    | NAV/지수괴리율  | String | N        | 20     |             |
| - navetfdispty_rt      | NAV/ETF괴리율   | String | N        | 20     |             |
| - trace_eor_rt         | 추적오차율      | String | N        | 20     |             |
| - trace_cur_prc        | 추적현재가      | String | N        | 20     |             |
| - trace_pred_pre       | 추적전일대비    | String | N        | 20     |             |
| - trace_pre_sig        | 추적대비기호    | String | N        | 20     |             |



## PYTHON
import requests
import json

# ETF일별추이요청
def fn_ka40003(token, data, cont_yn='N', next_key=''):
	# 1. 요청할 API URL
	#host = 'https://mockapi.kiwoom.com' # 모의투자
	host = 'https://api.kiwoom.com' # 실전투자
	endpoint = '/api/dostk/etf'
	url =  host + endpoint

	# 2. header 데이터
	headers = {
		'Content-Type': 'application/json;charset=UTF-8', # 컨텐츠타입
		'authorization': f'Bearer {token}', # 접근토큰
		'cont-yn': cont_yn, # 연속조회여부
		'next-key': next_key, # 연속조회키
		'api-id': 'ka40003', # TR명
	}

	# 3. http POST 요청
	response = requests.post(url, headers=headers, json=data)

	# 4. 응답 상태 코드와 데이터 출력
	print('Code:', response.status_code)
	print('Header:', json.dumps({key: response.headers.get(key) for key in ['next-key', 'cont-yn', 'api-id']}, indent=4, ensure_ascii=False))
	print('Body:', json.dumps(response.json(), indent=4, ensure_ascii=False))  # JSON 응답을 파싱하여 출력

# 실행 구간
if __name__ == '__main__':
	# 1. 토큰 설정
	MY_ACCESS_TOKEN = '사용자 AccessToken' # 접근토큰

	# 2. 요청 데이터
	params = {
		'stk_cd': '069500', # 종목코드 
	}

	# 3. API 실행
	fn_ka40003(token=MY_ACCESS_TOKEN, data=params)

	# next-key, cont-yn 값이 있을 경우
	# fn_ka40003(token=MY_ACCESS_TOKEN, data=params, cont_yn='Y', next_key='nextkey..')


    ## Example


Request
{
	"stk_cd" : "069500"
}
Response
{
	"etfdaly_trnsn":
		[
			{
				"cntr_dt":"20241125",
				"cur_prc":"100535",
				"pre_sig":"0",
				"pred_pre":"0",
				"pre_rt":"0.00",
				"trde_qty":"0",
				"nav":"0.00",
				"acc_trde_prica":"0",
				"navidex_dispty_rt":"0.00",
				"navetfdispty_rt":"0.00",
				"trace_eor_rt":"0",
				"trace_cur_prc":"0",
				"trace_pred_pre":"0",
				"trace_pre_sig":"3"
			},
			{
				"cntr_dt":"20241122",
				"cur_prc":"100535",
				"pre_sig":"0",
				"pred_pre":"0",
				"pre_rt":"0.00",
				"trde_qty":"0",
				"nav":"+100584.57",
				"acc_trde_prica":"0",
				"navidex_dispty_rt":"0.00",
				"navetfdispty_rt":"-0.05",
				"trace_eor_rt":"0",
				"trace_cur_prc":"0",
				"trace_pred_pre":"0",
				"trace_pre_sig":"3"
			},
			{
				"cntr_dt":"20241121",
				"cur_prc":"100535",
				"pre_sig":"0",
				"pred_pre":"0",
				"pre_rt":"0.00",
				"trde_qty":"0",
				"nav":"+100563.36",
				"acc_trde_prica":"0",
				"navidex_dispty_rt":"0.00",
				"navetfdispty_rt":"-0.03",
				"trace_eor_rt":"0",
				"trace_cur_prc":"0",
				"trace_pred_pre":"0",
				"trace_pre_sig":"3"
			}
		],
	"return_code":0,
	"return_msg":"정상적으로 처리되었습니다"
}
