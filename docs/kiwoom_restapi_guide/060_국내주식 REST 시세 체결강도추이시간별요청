파일이름 : 060_국내주식 REST 시세 체결강도추이시간별요청.md

```markdown
## 국내주식 시세 (체결강도추이시간별요청)

### 기본 정보
| Element          | 내용               |
|------------------|--------------------|
| Method           | POST               |
| 운영 도메인       | `https://api.kiwoom.com` |
| 모의투자 도메인   | `https://mockapi.kiwoom.com` (KRX만 지원가능) |
| URL              | `/api/dostk/mrkcond` |
| Format           | JSON               |
| Content-Type     | `application/json;charset=UTF-8` |

### 다른 TR 확인하기
- **TR명**  
  - 체결강도추이시간별요청 (`ka10046`)  
  - 주식호가요청 (`ka10004`)  
  - 주식일주월시분요청 (`ka10005`)  
  - 주식시분요청 (`ka10006`)  
  - 시세표성정보요청 (`ka10007`)  
  - 신주인수권전체시세요청 (`ka10011`)  
  - 일별기관매매종목요청 (`ka10044`)  
  - 종목별기관매매추이요청 (`ka10045`)  
  - 체결강도추이일별요청 (`ka10047`)  
  - 장중투자자별매매요청 (`ka10063`)  
  - 장마감후투자자별매매요청 (`ka10066`)  
  - 증권사별종목매매동향요청 (`ka10078`)  
  - 일별주가요청 (`ka10086`)  
  - 시간외단일가요청 (`ka10087`)  

---

## 요청

### Header
| Element          | 한글명     | Type   | Required | Length | Description                   |
|------------------|------------|--------|----------|--------|-------------------------------|
| authorization    | 접근토큰   | String | Y        | 1000   | 토큰 지정시 `Bearer` 타입 추가 (예: `Bearer Egicyx...`) |
| cont-yn          | 연속조회여부 | String | N        | 1      | 응답 Header의 `cont-yn`이 `Y`일 경우 다음 요청시 세팅 |
| next-key         | 연속조회키 | String | N        | 50     | 응답 Header의 `next-key` 값 세팅 |
| api-id           | TR명       | String | Y        | 10     |                               |

### Body
| Element    | 한글명      | Type   | Required | Length | Description                   |
|------------|-------------|--------|----------|--------|-------------------------------|
| stk_cd     | 종목코드    | String | Y        | 6      | 거래소별 종목코드 (예: `KRX:039490`, `NXT:039490_NX`) |

---

## 응답

### Header
| Element   | 한글명     | Type   | Required | Length | Description                   |
|-----------|------------|--------|----------|--------|-------------------------------|
| cont-yn   | 연속조회여부 | String | N        | 1      | 다음 데이터 존재시 `Y` 전달    |
| next-key  | 연속조회키 | String | N        | 50     | 다음 데이터 요청시 사용할 키    |
| api-id    | TR명       | String | Y        | 10     |                               |

### Body
| Element                     | 한글명             | Type   | Required | Length |
|-----------------------------|--------------------|--------|----------|--------|
| cntr_str_tm                | 체결강도시간별     | LIST   | N        |        |
| - cntr_tm                  | 체결시간           | String | N        | 20     |
| - cur_prc                  | 현재가             | String | N        | 20     |
| - pred_pre                 | 전일대비           | String | N        | 20     |
| - pred_pre_sig             | 전일대비기호       | String | N        | 20     |
| - flu_rt                   | 등락율             | String | N        | 20     |
| - trde_qty                 | 거래량             | String | N        | 20     |
| - acc_trde_prica           | 누적거래대금       | String | N        | 20     |
| - acc_trde_qty             | 누적거래량         | String | N        | 20     |
| - cntr_str                 | 체결강도           | String | N        | 20     |
| - cntr_str_5min            | 체결강도5분        | String | N        | 20     |
| - cntr_str_20min           | 체결강도20분       | String | N        | 20     |
| - cntr_str_60min           | 체결강도60분분       | String | N        | 20     |
| - stex_tp                  | 거래소구분         | String | N        | 20     |
```


import requests
import json

# 체결강도추이시간별요청
def fn_ka10046(token, data, cont_yn='N', next_key=''):
	# 1. 요청할 API URL
	#host = 'https://mockapi.kiwoom.com' # 모의투자
	host = 'https://api.kiwoom.com' # 실전투자
	endpoint = '/api/dostk/mrkcond'
	url =  host + endpoint

	# 2. header 데이터
	headers = {
		'Content-Type': 'application/json;charset=UTF-8', # 컨텐츠타입
		'authorization': f'Bearer {token}', # 접근토큰
		'cont-yn': cont_yn, # 연속조회여부
		'next-key': next_key, # 연속조회키
		'api-id': 'ka10046', # TR명
	}

	# 3. http POST 요청
	response = requests.post(url, headers=headers, json=data)

	# 4. 응답 상태 코드와 데이터 출력
	print('Code:', response.status_code)
	print('Header:', json.dumps({key: response.headers.get(key) for key in ['next-key', 'cont-yn', 'api-id']}, indent=4, ensure_ascii=False))
	print('Body:', json.dumps(response.json(), indent=4, ensure_ascii=False))  # JSON 응답을 파싱하여 출력

# 실행 구간
if __name__ == '__main__':
	# 1. 토큰 설정
	MY_ACCESS_TOKEN = '사용자 AccessToken' # 접근토큰

	# 2. 요청 데이터
	params = {
		'stk_cd': '005930', # 종목코드 거래소별 종목코드 (KRX:039490,NXT:039490_NX,SOR:039490_AL)
	}

	# 3. API 실행
	fn_ka10046(token=MY_ACCESS_TOKEN, data=params)

	# next-key, cont-yn 값이 있을 경우
	# fn_ka10046(token=MY_ACCESS_TOKEN, data=params, cont_yn='Y', next_key='nextkey..')


    ## Example


Request
{
	"stk_cd" : "005930"
}
Response
{
	"cntr_str_tm":
		[
			{
				"cntr_tm":"163713",
				"cur_prc":"+156600",
				"pred_pre":"+34900",
				"pred_pre_sig":"2",
				"flu_rt":"+28.68",
				"trde_qty":"-1",
				"acc_trde_prica":"14449",
				"acc_trde_qty":"113636",
				"cntr_str":"172.01",
				"cntr_str_5min":"172.01",
				"cntr_str_20min":"172.01",
				"cntr_str_60min":"170.67",
				"stex_tp":"KRX"
			},
			{
				"cntr_tm":"163500",
				"cur_prc":"+156600",
				"pred_pre":"+34900",
				"pred_pre_sig":"2",
				"flu_rt":"+28.68",
				"trde_qty":"2",
				"acc_trde_prica":"14449",
				"acc_trde_qty":"113635",
				"cntr_str":"172.01",
				"cntr_str_5min":"172.01",
				"cntr_str_20min":"172.01",
				"cntr_str_60min":"170.62",
				"stex_tp":"KRX"
			},
			{
				"cntr_tm":"163016",
				"cur_prc":"+156600",
				"pred_pre":"+34900",
				"pred_pre_sig":"2",
				"flu_rt":"+28.68",
				"trde_qty":"823",
				"acc_trde_prica":"14449",
				"acc_trde_qty":"113633",
				"cntr_str":"172.01",
				"cntr_str_5min":"172.01",
				"cntr_str_20min":"171.02",
				"cntr_str_60min":"170.70",
				"stex_tp":"KRX"
			}
		],
	"return_code":0,
	"return_msg":"정상적으로 처리되었습니다"
}

